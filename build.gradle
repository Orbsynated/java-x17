plugins {
    id 'distribution'
    id 'java'
    id 'maven-publish'
}

allprojects {
    group = 'org.hash'
    version = '1.0'
}

def LOCAL_PROPERTIES_FILENAME = "local.properties"

def getFile = { dir, filename ->
    File file = new File("$dir$File.separator$filename")
    file?.exists() ? file : null
}

def getPropertyFile = { dir ->
    return getFile(dir, LOCAL_PROPERTIES_FILENAME)
}

def getLocalProperties = { dir ->
    def file = getPropertyFile(dir)
    if (!file) {
        return null
    }

    Properties properties = new Properties()
    properties.load(file.newInputStream())
    return properties
}

project.ext.localProperties = getLocalProperties(rootDir)


// Add repositories
allprojects { Project project ->
    afterEvaluate {
        if (pluginManager.hasPlugin('maven-publish')) {
            configure(project) {
                publishing {
                    repositories {
                        maven {
                            name = 'Github'
                            url = uri('https://maven.pkg.github.com/Orbsynated/java-x17')
                            credentials {
                                println project.properties
                                username = project.ext.localProperties.getProperty('JAVA_X17_GITHUB_USERNAME')
                                password = project.ext.localProperties.getProperty('JAVA_X17_GITHUB_TOKEN')
                            }
                        }
                    }
                }
            }
        }
    }
}

// Add publication
allprojects { Project project ->
    afterEvaluate {
        if (pluginManager.hasPlugin('maven-publish')) {
            configure(project) {
                publishing {
                    publications {
                        create(project.name, MavenPublication) {
                            pom {
                                artifactId = "java-x17"
                                name = "$group:$artifactId"
                                licenses {
                                    license {
                                        name = 'GNU General Public License, Version 2'
                                        url = 'https://www.gnu.org/licenses/gpl-2.0.txt'
                                        distribution = 'repo'
                                    }
                                }
                                issueManagement {
                                    system = 'Github Tracker'
                                    url = 'https://github.com/Orbsynated/java-x17/issues'
                                }
                                scm {
                                    url = 'https://github.com/Orbsynated/java-x17.git'
                                    connection = 'scm:git:https://github.com/Orbsynated/java-x17.git'
                                }
                                developers {
                                    developer {
                                        id = 'lafortune'
                                        name = 'Orbsynated'
                                        roles = ['Project Administrator', 'Developer']
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}

// Configure default publication (all Java projects)
allprojects { Project project ->
    afterEvaluate {
        if  (pluginManager.hasPlugin('maven-publish') && pluginManager.hasPlugin('java')) {
            configure(project) {
                javadoc {
                    options.addStringOption('Xdoclint:none', '-quiet')
                }
                java {
                    withJavadocJar()
                    withSourcesJar()
                }
                publishing {
                    publications {
                        getByName(project.name) {
                            from components.java
                        }
                    }
                }
            }
        }
    }
}

distributions {
    main {
        distributionBaseName.set('java-x17')
        contents {
            into('lib') {
                from tasks.getByPath(':X17:fatJar').outputs
            }
            from(rootDir) {
                include 'bin/'
                include 'examples/'
                include 'LICENSE'
                include 'LICENSE_exception.md'
            }
        }
    }
}

distTar {
    compression = Compression.GZIP
    archiveExtension.set('tar.gz')
}

clean {
    delete file("$rootDir/lib")
}